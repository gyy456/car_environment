// Generated by gencpp from file simulator/GameState.msg
// DO NOT EDIT!


#ifndef SIMULATOR_MESSAGE_GAMESTATE_H
#define SIMULATOR_MESSAGE_GAMESTATE_H

#include <ros/service_traits.h>


#include <simulator/GameStateRequest.h>
#include <simulator/GameStateResponse.h>


namespace simulator
{

struct GameState
{

typedef GameStateRequest Request;
typedef GameStateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GameState
} // namespace simulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::simulator::GameState > {
  static const char* value()
  {
    return "f7848a22d5afde1641f85397c52ff102";
  }

  static const char* value(const ::simulator::GameState&) { return value(); }
};

template<>
struct DataType< ::simulator::GameState > {
  static const char* value()
  {
    return "simulator/GameState";
  }

  static const char* value(const ::simulator::GameState&) { return value(); }
};


// service_traits::MD5Sum< ::simulator::GameStateRequest> should match
// service_traits::MD5Sum< ::simulator::GameState >
template<>
struct MD5Sum< ::simulator::GameStateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::GameState >::value();
  }
  static const char* value(const ::simulator::GameStateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::GameStateRequest> should match
// service_traits::DataType< ::simulator::GameState >
template<>
struct DataType< ::simulator::GameStateRequest>
{
  static const char* value()
  {
    return DataType< ::simulator::GameState >::value();
  }
  static const char* value(const ::simulator::GameStateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::simulator::GameStateResponse> should match
// service_traits::MD5Sum< ::simulator::GameState >
template<>
struct MD5Sum< ::simulator::GameStateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::GameState >::value();
  }
  static const char* value(const ::simulator::GameStateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::GameStateResponse> should match
// service_traits::DataType< ::simulator::GameState >
template<>
struct DataType< ::simulator::GameStateResponse>
{
  static const char* value()
  {
    return DataType< ::simulator::GameState >::value();
  }
  static const char* value(const ::simulator::GameStateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SIMULATOR_MESSAGE_GAMESTATE_H
